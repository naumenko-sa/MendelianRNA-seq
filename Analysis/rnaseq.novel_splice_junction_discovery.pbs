#!/bin/bash

#PBS -l walltime=10:00:00,nodes=1:ppn=10
#PBS -joe .
#PBS -d .
#PBS -l vmem=10g,mem=10g

if [ -z "$transcriptFile" ];
then
		echo "ERROR - Specify a path to a transcriptFile with the format:"
		echo "Gene	Type	Chrom	Start	End	NTimesSeen	NSamplesSeen	Samples:NSeen"
		echo "AL627309.1	BLAH	1	136903	136953	1	1	G34487:1"
		exit 1
fi

if [ -z "$sample" ];
then
		echo "ERROR - Specify the name of the bam file you want to discover junctions specific to with the bam extension"
		echo "E.x. findNovel.bam would be sample=findNovel"
		exit 1
fi

home=~/tools/MendelianRNA-seq

name=`basename $transcriptFile`
sjdOutput="All."$name".splicing.list"

#	Optional parameters
if [ -z "$minRead" ];
then
		minRead=10
fi

if [ -z "$threshold" ];
then
		threshold=0.5
fi

if [ -z "$processes" ];
then
		processes=10
fi

if [ -z "$bamList" ];
then
		bamList='bamlist.list'
fi

normOutput="norm"$sjdOutput
filteredOutput="threshold"$threshold"_novel_"$sample"_norm_"$sjdOutput

module load python/2.7.11
python ~/tools/MendelianRNA-seq/Analysis/SpliceJunctionDiscovery.py -transcriptFile=$transcriptFile -bamList=$bamList -processes=$processes

if [ -z "transcript_model" ];
then
	$home/Analysis/NormalizeSpliceJunctionValues.py -transcript_model=$transcript_model -splice_file=$sjdOutput --normalize > $normOutput
else
	$home/Analysis/NormalizeSpliceJunctionValues.py -splice_file=$sjdOutput --normalize > $normOutput
fi

python ~/tools/MendelianRNA-seq/Analysis/FilterSpliceJunctions.py -file=$normOutput -sample=$sample -minRead=$minRead -threshold=$threshold > $filteredOutput
rm $normOutput
